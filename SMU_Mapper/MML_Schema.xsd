<?xml version="1.0" encoding="utf-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mstns="http://tempuri.org/myschema/unique">
  <xs:element name="maps">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="header">
          <xs:annotation>
            <xs:documentation>Defines a container for introductory content.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="model" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="0" maxOccurs="unbounded" name="class">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="item" use="required">
                              <xs:simpleType>
                                <xs:restriction base="xs:string">
                                  <xs:minLength value="1"/>
                                  <xs:pattern value="[a-zA-Z0-9_]+"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="masterform" use="required" >
                              <xs:simpleType>
                                <xs:restriction base="xs:string">
                                  <xs:minLength value="1"/>
                                  <xs:pattern value="([a-zA-Z0-9_\s]+)\|([a-zA-Z0-9_\s]+)"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="itemrevision" use="required" >
                              <xs:simpleType>
                                <xs:restriction base="xs:string">
                                  <xs:minLength value="1"/>
                                  <xs:pattern value="[a-zA-Z0-9_]+"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="masterform-rev" use="required" >
                              <xs:simpleType>
                                <xs:restriction base="xs:string">
                                  <xs:minLength value="1"/>
                                  <xs:pattern value="([a-zA-Z0-9_\s]+)\|([a-zA-Z0-9_\s]+)"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="isSecondary" use="optional">
                              <xs:simpleType>
                                <xs:restriction base="xs:string">
                                  <xs:enumeration value="true"/>
                                  <xs:enumeration value="false"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
                <xs:unique name="oneClassRev">
                  <xs:selector xpath="class"/>
                  <xs:field xpath="@itemrevision"/>
                </xs:unique>
                <xs:unique name="oneClassItem">
                  <xs:selector xpath="class"/>
                  <xs:field xpath="@item"/>
                </xs:unique>
              </xs:element>
              <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element maxOccurs="unbounded" name="lookup">
                  <xs:annotation>
                    <xs:documentation>Lookup defination for key/value pairs loaded from external file. Delimiter is a pipe "|".</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:attribute name="file" use="required" >
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:minLength value="1"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="name" use="required" >
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:minLength value="1"/>
                          <xs:pattern value="[a-zA-Z0-9_]+"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                 
                </xs:element>
                <xs:element name="variable">
                  <xs:annotation>
                    <xs:documentation>Declares a variable of users specified name and value. Strings are surrounded by single quotes.</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:attribute name="name" use="required" >
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:minLength value="1"/>
                          <xs:pattern value="[a-zA-Z0-9_]+"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="value" use="required" >
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:minLength value="1"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
                <xs:element name="function" type="xs:string" />
                <xs:element name="mapRefObject">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element minOccurs="0" maxOccurs="unbounded"  name="value" >
                        <xs:complexType>
                          <xs:attribute name="a" use="required" >
                            <xs:simpleType>
                              <xs:restriction base="xs:string">
                                <xs:minLength value="1"/>
                                <xs:pattern value="[a-zA-Z0-9_]+"/>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:attribute>
                          <xs:attribute name="b" use="required" >
                            <xs:simpleType>
                              <xs:restriction base="xs:string">
                                <xs:pattern value="[a-zA-Z0-9_]*"/>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:attribute>
                        </xs:complexType>
                      </xs:element>
                    </xs:sequence>
                    <xs:attribute name="type" use="required" >
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="DatasetType"/>
                          <xs:enumeration value="Group"/>
                          <xs:enumeration value="ImanType"/>
                          <xs:enumeration value="ImanVolume"/>
                          <xs:enumeration value="ReleaseStatus"/>
                          <xs:enumeration value="Tool"/>
                          <xs:enumeration value="UnitOfMeasure"/>
                          <xs:enumeration value="User"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="lookup" use="optional" >
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:minLength value="1"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
              </xs:choice>
            </xs:sequence>
          </xs:complexType>
          <xs:key name="LookupKey">
            <xs:selector xpath="lookup"/>
            <xs:field xpath="@name"/>
          </xs:key>
          <xs:keyref name="myIdref" refer="LookupKey">
            <xs:selector xpath="mapRefObject"/>
            <xs:field xpath="@lookup"/>
          </xs:keyref>
          <xs:unique name="oneVaribleName">
            <xs:selector xpath="variable"/>
            <xs:field xpath="@name"/>
          </xs:unique>
          <xs:unique name="oneLookupName">
            <xs:selector xpath="lookup"/>
            <xs:field xpath="@name"/>
          </xs:unique>
          <xs:unique name="oneRefObjectName">
            <xs:selector xpath="mapRefObject"/>
            <xs:field xpath="@type"/>
          </xs:unique>
          <xs:unique name="oneRefObjectLookup">
            <xs:selector xpath="mapRefObject"/>
            <xs:field xpath="@lookup"/>
          </xs:unique>
          <xs:unique name="oneRefObjectValueLookup">
            <xs:selector xpath="mapRefObject/value"/>
            <xs:field xpath="@a"/>
          </xs:unique>
        </xs:element>
        <xs:choice maxOccurs="unbounded">
          <xs:element maxOccurs="unbounded" name="map">
            <xs:annotation>
              <xs:documentation>Mapping definition. Maps object type "a" to target "b" unless "a" and "b" are the same then type change is ignored.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence minOccurs="0">
                <xs:element maxOccurs="unbounded" minOccurs="0" name="join">
                  <xs:complexType>
                    <xs:attribute name="obj" type="xs:string" use="required" />
                    <xs:attribute name="on" use="required" >
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:minLength value="1"/>
                          <xs:pattern value="^[a-zA-z0-9_]+@[a-zA-z0-9_]+(?:\s)*?=(?:\s)*?[a-zA-z0-9_]+@[a-zA-z0-9_]+$"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
                <xs:element maxOccurs="1" minOccurs="0" name="src-check">
                  <xs:annotation>
                    <xs:documentation>Query filtering on object.</xs:documentation>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:attribute name="if" type="xs:string" use="required" />
                  </xs:complexType>
                </xs:element>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                  <xs:element name="attribute">
                    <xs:annotation>
                      <xs:documentation>Single attribute definition. Sets the value of the named variable.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:attribute name="name" use="required" >
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:minLength value="1"/>
                            <xs:pattern value="[a-zA-Z0-9_]+"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="value" use="required" >
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:minLength value="1"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="attr">
                    <xs:annotation>
                      <xs:documentation>Mapped attribute definition. Maps attribute "a" to target "b" .</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:all>
                        <xs:element minOccurs="0" name="copy" >
                          <xs:annotation>
                            <xs:documentation>If copy is added, the "a" attribute is not replaced, but instead copied and a new attribute is created of value of mapping "b"</xs:documentation>
                          </xs:annotation>
                        </xs:element>
                        <xs:element minOccurs="1" name="a" >
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:pattern value="[a-zA-Z0-9_]+"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:element>
                        <xs:element minOccurs="1" name="b" >
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:pattern value="[a-zA-Z0-9_]+"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:element>
                      </xs:all>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="attr-check">
                    <xs:annotation>
                      <xs:documentation>Conditional check on attribute to determine attribute mappings.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:choice maxOccurs="unbounded">
                          <xs:element name="attribute">
                            <xs:annotation>
                              <xs:documentation>Single attribute definition. Sets the value of the named variable.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="name" use="required" >
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:pattern value="[a-zA-Z0-9_]+"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="value" use="required" >
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="attr">
                            <xs:annotation>
                              <xs:documentation>Mapped attribute definition. Maps attribute "a" to target "b".</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:all>
                                <xs:element minOccurs="0" name="copy" />
                                <xs:element minOccurs="1" name="a" >
                                  <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                      <xs:minLength value="1"/>
                                      <xs:pattern value="[a-zA-Z0-9_]+"/>
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                                <xs:element minOccurs="1" name="b" >
                                  <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                      <xs:minLength value="1"/>
                                      <xs:pattern value="[a-zA-Z0-9_]+"/>
                                    </xs:restriction>
                                  </xs:simpleType>
                                </xs:element>
                              </xs:all>
                            </xs:complexType>
                          </xs:element>
                        </xs:choice>
                      </xs:sequence>
                      <xs:attribute name="if" type="xs:string" use="required" />
                    </xs:complexType>
                  </xs:element>
                </xs:choice>
              </xs:sequence>
              <xs:attribute name="a" use="required" >
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:minLength value="1"/>
                    <xs:pattern value="^(?!User|Group$|Volume|ReleaseStatus|Tool|DatasetType|UnitOfMeasure|ImanType)[a-zA-Z0-9_]+$"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
              <xs:attribute name="b" use="required" >
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:minLength value="1"/>
                    <xs:pattern value="^(?!User|Group$|Volume|ReleaseStatus|Tool|DatasetType|UnitOfMeasure|ImanType)[a-zA-Z0-9_]+$"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
              <xs:attribute name="map-class" use="optional" >
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:enumeration value="yes"/>
                    <xs:enumeration value="no"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
            </xs:complexType>
            <xs:unique name="oneJoinObj">
              <xs:selector xpath="join"/>
              <xs:field xpath="@obj"/>
            </xs:unique>
          </xs:element>
          <xs:element name="script" type="xs:string">
            <xs:annotation>
              <xs:documentation>Used to embed custom code for mapping.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  
  </xs:element>
</xs:schema>